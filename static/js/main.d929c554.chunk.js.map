{"version":3,"sources":["assets/pictures/cat1.jpg","assets/pictures/dog1.jpg","assets/pictures/cat2.jpg","assets/pictures/hamster1.jpg","assets/pictures/cat3.jpg","assets/pictures/cat4.jpg","assets/pictures/raccoon1.jpg","assets/pictures/dog2.jpg","redux/constants.js","redux/reducers.js","redux/store.js","redux/actions.js","components/button/Button.js","components/pagination/Pagination.js","components/input/Input.js","services/validation.js","components/forms/NameEmailForm.js","components/select/Select.js","components/forms/LocationForm.js","components/checkbox/CheckBox.js","components/forms/SocialProfileForm.js","components/image-picker/ImagePicker.js","components/forms/CatForm.js","components/cards/finalScreen.js","app/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","constants","initialState","nameEmailData","name","email","locationData","country","city","socialNetworks","facebook","isFacebook","vkontakte","isVkontakte","twitter","isTwitter","odnoklassniki","isOdnoklassniki","catImage","forms","1","2","3","4","appReducer","combineReducers","NameEmail","state","arguments","length","undefined","action","type","Types","payload","Location","SocialNetworks","CatImage","Forms","Object","objectSpread","rootReducer","store","createStore","reducers","composeWithDevTools","actions","addNameEmail","addLocation","addSocialNetworks","networks","addCatImage","image","clearStore","addIsValidatedForm","formState","Button","_this$props","this","props","kind","onClick","children","react_default","a","createElement","className","Component","defaultProps","Pagination","totalPages","activeStep","buttons","_loop","i","classButton","push","key","Input","value","error","placeholder","onChange","isError","classInput","validateName","test","NameEmailForm","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","target","setState","defineProperty","validEmail","validName","prevProps","prevState","_this$state","_this$props2","_this$state2","components_input_Input","Select","showDropdown","handlerClick","setWrapperRef","node","inputRef","handleClickOutside","contains","handleChoose","document","addEventListener","removeEventListener","_this2","label","options","search","selectedKey","ref","autoComplete","readOnly","style","display","keys","map","LocationForm","onChangeCountry","Countries","countryKey","filteredCities","filterCities","cityKey","onChangeCity","Cities","forEach","find","components_select_Select","CheckBox","checked","SocialProfileForm","JSON","stringify","components_checkbox_CheckBox","ImagePicker","imageSrcList","selectedImage","index","imageSrc","kindOfPet","src","alt","imageList","require","CatForm","handleImageClick","isCat","components_image_picker_ImagePicker","FinalScreen","goOverAgain","components_button_Button","App","activeForm","counterClickNextForm","getActiveForm","forms_NameEmailForm","forms_LocationForm","forms_SocialProfileForm","forms_CatForm","finalScreen","assign","goToForm","components_pagination_Pagination","fa","size","marginRight","marginLeft","connect","dispatch","bindActionCreators","Boolean","window","location","hostname","match","ReactDOM","render","es","src_app_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d929c554.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cat1.6a3b98f2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dog1.8a3d82c2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cat2.2e5c1ff6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hamster1.55c0a805.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cat3.b607ec5c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cat4.1f73c4fe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/raccoon1.9a227543.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dog2.b0aae8b2.jpg\";","export default {\r\n  ADD_NAME_EMAIL: 'ADD_NAME_EMAIL',\r\n  ADD_LOCATION_DATA: 'ADD_LOCATION_DATA',\r\n  ADD_SOCIAL_NETWORKS: 'SOCIAL_NETWORKS',\r\n  ADD_CAT_IMAGE: 'ADD_CAT_IMAGE',\r\n  GO_OVER_AGAIN: 'GO_OVER_AGAIN',\r\n  IS_VALIDATED_FORM: 'IS_VALIDATED_FORM'\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport Types from './constants';\r\n\r\nconst initialState = {\r\n  nameEmailData: {\r\n    name: '',\r\n    email: ''\r\n  },\r\n  locationData: {\r\n    country: '',\r\n    city: ''\r\n  },\r\n  socialNetworks: {\r\n    facebook: '',\r\n    isFacebook: false,\r\n    vkontakte: '',\r\n    isVkontakte: false,\r\n    twitter: '',\r\n    isTwitter: false,\r\n    odnoklassniki: '',\r\n    isOdnoklassniki: false\r\n  },\r\n  catImage: '',\r\n  forms: {\r\n    1:  false,\r\n    2:  false,\r\n    3:  false,\r\n    4:  false,\r\n  }\r\n\r\n};\r\n\r\nconst NameEmail = (state = initialState.nameEmailData, action) => {\r\n  switch (action.type) {\r\n    case Types.ADD_NAME_EMAIL:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Location = (state = initialState.locationData, action) => {\r\n  switch (action.type) {\r\n    case Types.ADD_LOCATION_DATA:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nconst SocialNetworks = (state = initialState.socialNetworks, action) => {\r\n  switch (action.type) {\r\n    case Types.ADD_SOCIAL_NETWORKS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst CatImage = (state = initialState.catImage, action) => {\r\n  switch (action.type) {\r\n    case Types.ADD_CAT_IMAGE:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Forms = (state = initialState.forms, action) => {\r\n  switch (action.type) {\r\n    case Types.IS_VALIDATED_FORM: {\r\n      return {...state, ...action.payload};\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nconst appReducer =  combineReducers({\r\n  NameEmail,\r\n  Location,\r\n  SocialNetworks,\r\n  CatImage,\r\n  Forms\r\n});\r\n\r\nconst rootReducer = (state, action) => {\r\n  if (action.type === Types.GO_OVER_AGAIN) {\r\n    state = undefined;\r\n  }\r\n\r\n  return appReducer(state, action)\r\n}\r\n\r\nexport default rootReducer;","import { createStore} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(reducers,  composeWithDevTools());\r\n\r\nexport default store;","import Types from './constants'\r\n\r\nexport default {\r\n  addNameEmail: (name, email) => {\r\n    return { type: Types.ADD_NAME_EMAIL, payload: { name, email } };\r\n  },\r\n\r\n  addLocation: (country, city) => {\r\n    return { type: Types.ADD_LOCATION_DATA, payload: { country, city } };\r\n  },\r\n\r\n  addSocialNetworks: (networks) => {\r\n    return { type: Types.ADD_SOCIAL_NETWORKS, payload: networks };\r\n  },\r\n\r\n  addCatImage: (image) => {\r\n    return { type: Types.ADD_CAT_IMAGE, payload: image };\r\n  },\r\n\r\n  clearStore: () => {\r\n    return { type: Types.GO_OVER_AGAIN };\r\n  },\r\n\r\n  addIsValidatedForm: (formState) => {\r\n    return { type: Types.IS_VALIDATED_FORM, payload: formState };\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport './Button.scss';\r\n\r\nclass Button extends Component {\r\n    render() {\r\n        const { type, kind, onClick, children } = this.props;\r\n        return (\r\n            <button\r\n                type={type}\r\n                className={kind === 'orange' ? 'orange-btn' : 'white-btn'}\r\n                onClick={onClick}\r\n            >\r\n                {children}\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nButton.defaultProps = {\r\n    type: 'button'\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport './Pagination.scss';\r\n\r\nclass Pagination extends Component {\r\n    render() {\r\n        const { totalPages, onClick, activeStep, forms } = this.props;\r\n        const buttons = [];\r\n        for (let i = 1; i <= totalPages; i++) {\r\n            let classButton = '';\r\n            if(activeStep === i) classButton += 'active ';\r\n            if(forms[i]) classButton += 'available';\r\n            \r\n            buttons.push(\r\n                <button\r\n                    className={classButton }\r\n                    onClick={() => onClick(i)}\r\n                    key={i}\r\n                >\r\n                    {i}\r\n                </button>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className='pagination'>\r\n                {buttons}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Pagination;\r\n","import React, { Component } from 'react';\r\nimport './Input.scss';\r\n\r\nclass Input extends Component {\r\n    render() {\r\n        const { type, value, name, error, placeholder, onChange, className } = this.props;\r\n        const isError = error.length > 0;\r\n        const classInput = isError ?  (!className ? 'input-error' : 'input-error ' + className) : className;\r\n\r\n        return (\r\n            <div className='input-wrapper'>\r\n                <input\r\n                    type={type}\r\n                    name={name}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    placeholder={placeholder}\r\n                    className={classInput}\r\n                />\r\n                {isError && <span className='error'>{error}</span>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nInput.defaultProps = {\r\n    type: 'text'\r\n};\r\n\r\nexport default Input;","export function validateEmail(email) {\r\n    const regExp = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return regExp.test(email);\r\n}\r\n\r\nexport function validateName(name) {\r\n    const regExp = /^[а-яА-Я ]+$/;\r\n    return regExp.test(name);\r\n}","import React, { Component } from 'react';\r\nimport Input from 'components/input/Input';\r\nimport { validateEmail, validateName } from 'services/validation';\r\nimport './Forms.scss';\r\n\r\nclass NameEmailForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const { name, email } = this.props;\r\n        this.state = { name, email };\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({ [name]: value });\r\n\r\n        if (name === 'email')\r\n            this.setState({ validEmail: validateEmail(value) });\r\n    \r\n        if (name === 'name') \r\n            this.setState({ validName: validateName(value) });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { name, email, validName, validEmail } = this.state;\r\n        const { action, addIsValidatedForm } = this.props;\r\n\r\n        if(prevState.name !== name || prevState.email !== email) {\r\n            if(validName && validEmail) {\r\n                action(name, email);\r\n                addIsValidatedForm({1: true});\r\n            } else {\r\n                addIsValidatedForm({1: false});\r\n            }   \r\n        }   \r\n    }\r\n  \r\n\r\n    render() {\r\n        const { name, email, validName, validEmail } = this.state;\r\n        return (\r\n            <form>\r\n                <h2>1. Введите имя и e-mail</h2>\r\n                <Input\r\n                    name='name'\r\n                    value={name}\r\n                    placeholder='Имя'\r\n                    error={validName === false ? 'Имя должно состоять из букв только русского алфавита и пробела' : ''}\r\n                    onChange={this.handleInputChange}\r\n                />\r\n                <Input\r\n                    name='email'\r\n                    type='email'\r\n                    error={validEmail === false ? 'Неправильный email' : ''}\r\n                    value={email}\r\n                    placeholder='e-mail'\r\n                    onChange={this.handleInputChange}\r\n                />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default NameEmailForm;","import React, { Component } from 'react';\r\nimport './Select.scss';\r\n\r\nclass Select extends Component {\r\n    state = { showDropdown: false }\r\n\r\n    handlerClick = (event) => {\r\n        this.setState({ showDropdown: true});\r\n    }\r\n\r\n    setWrapperRef = (node) => {\r\n        this.inputRef = node;\r\n    }\r\n\r\n    handleClickOutside = (event) => {\r\n       if (this.inputRef && !this.inputRef.contains(event.target)) {\r\n               this.setState({ showDropdown: false });\r\n        }\r\n    }\r\n\r\n    handleChoose = (key) => {\r\n        this.props.onChange(key);\r\n        this.setState({ showDropdown: false });\r\n    }\r\n\r\n    componentDidMount() {\r\n      document.addEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      document.removeEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n\r\n    render() {\r\n        const { name, label, options, search, onChange, selectedKey} = this.props;\r\n        const { showDropdown} = this.state;\r\n     \r\n        return (\r\n            <div className='select' ref={this.setWrapperRef}>\r\n                <input\r\n                    type='text'\r\n                    name={name}\r\n                    value={options[selectedKey] ? options[selectedKey] : ''}\r\n                    placeholder={label}\r\n                    onClick={this.handlerClick}\r\n                    onChange={() => onChange(selectedKey)}\r\n                    autoComplete='off'\r\n                    readOnly={!search}\r\n                />\r\n                <div className='select-dropdown' style={{display: showDropdown ? 'flex' : 'none'}}>\r\n                     {\r\n                         Object.keys(options).map( (key) => {\r\n                            return <span onClick={() => this.handleChoose(key)} key={options[key]} >{options[key]}</span>;\r\n                         })\r\n                     }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSelect.defaultProps = {\r\n    options: [],\r\n    search: false\r\n};\r\n\r\nexport default Select;","import React, { Component } from 'react';\r\nimport Select from 'components/select/Select';\r\nimport Countries from 'assets/json/countries.json';\r\nimport Cities from 'assets/json/cities.json';\r\nimport './Forms.scss';\r\n\r\nclass LocationForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const { country, city } = this.props;\r\n        const countryKey = Object.keys(Countries).find(key => Countries[key] === country);\r\n        const cityKey = Object.keys(Cities).find(key => Cities[key].name === city);\r\n\r\n        this.state = { \r\n            country: country, \r\n            countryKey: countryKey, \r\n            city: city, \r\n            cityKey: cityKey, \r\n            filteredCities: this.filterCities(countryKey),\r\n            error: false\r\n        };\r\n    }\r\n\r\n    onChangeCountry = (key) => {\r\n        this.setState({\r\n            country: Countries[key],\r\n            countryKey: key\r\n        });\r\n\r\n        if(key) {\r\n           this.setState({filteredCities: this.filterCities(key)});\r\n           this.setState({\r\n             city: '',\r\n             cityKey: ''\r\n        });\r\n        }\r\n    }\r\n\r\n    onChangeCity = (key) => {\r\n        this.setState({\r\n            city: Cities[key].name,\r\n            cityKey: key\r\n        });\r\n    }\r\n\r\n    filterCities = (countryKey) => {\r\n        const filteredCities = {};\r\n\r\n        Object.keys( Cities).forEach((key) => {\r\n            if(Cities[key].country == countryKey)\r\n                filteredCities[key] =  Cities[key].name;\r\n        });\r\n\r\n        return filteredCities;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { country, city, filteredCities} = this.state;\r\n        const { action, addIsValidatedForm } = this.props;\r\n        if(prevState.country !== country || prevState.city !== city) {\r\n            if(country && (city || Object.keys(filteredCities).length === 0 )) {\r\n                action(country, city);\r\n                addIsValidatedForm({2: true});\r\n                this.setState({error: false});\r\n            } else {\r\n                addIsValidatedForm({2: false});\r\n                this.setState({error: true});\r\n            }   \r\n        }   \r\n    }\r\n  \r\n\r\n    render() {\r\n        const { countryKey, cityKey, filteredCities, error } = this.state;\r\n        return (\r\n            <form>\r\n                <h2>2. Выберите страну и город</h2>\r\n                <Select\r\n                    name='country'\r\n                    label='Страна'\r\n                    selectedKey={countryKey}\r\n                    options={Countries}\r\n                    onChange={this.onChangeCountry}\r\n                />\r\n                <Select\r\n                    name='city'\r\n                    label='Город'\r\n                    selectedKey={cityKey}\r\n                    options={filteredCities}\r\n                    onChange={this.onChangeCity}\r\n                />\r\n                {error && <p className='error'>Нужно выбрать страну и если есть - город!</p>}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default LocationForm;","import React, { Component } from 'react';\r\nimport './CheckBox.scss';\r\n\r\nclass CheckBox extends Component {\r\n    render() {\r\n        const { name, label, onChange, checked, className } = this.props;\r\n        return (\r\n            <label className={!className ? 'checkbox-wrapper' : 'checkbox-wrapper ' + className}>{label}\r\n                <input type='checkbox' name={name} checked={checked} onChange={onChange} />\r\n                <span className='checkmark'></span>\r\n            </label>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CheckBox;","import React, { Component } from 'react';\r\nimport CheckBox from 'components/checkbox/CheckBox';\r\nimport Input from 'components/input/Input';\r\nimport './Forms.scss';\r\n\r\nclass SocialProfileForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const { socialNetworks } = this.props;\r\n        this.state = { ...socialNetworks, error: false };\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { action, addIsValidatedForm } = this.props;\r\n\r\n        if(JSON.stringify(this.state) !== JSON.stringify(prevState)) {\r\n            const {\r\n                facebook,\r\n                isFacebook,\r\n                vkontakte,\r\n                isVkontakte,\r\n                twitter,\r\n                isTwitter,\r\n                odnoklassniki,\r\n                isOdnoklassniki,\r\n                error\r\n            } = this.state;\r\n\r\n            if( facebook && isFacebook ||\r\n                vkontakte && isVkontakte ||\r\n                twitter && isTwitter ||\r\n                odnoklassniki && isOdnoklassniki) {\r\n                action(this.state);\r\n                addIsValidatedForm({3: true});\r\n                this.setState({error: false});\r\n            } else {\r\n                addIsValidatedForm({3: false});\r\n                this.setState({error: true});\r\n            }   \r\n        }   \r\n    }\r\n\r\n\r\n    render() {\r\n        const {\r\n            facebook,\r\n            isFacebook,\r\n            vkontakte,\r\n            isVkontakte,\r\n            twitter,\r\n            isTwitter,\r\n            odnoklassniki,\r\n            isOdnoklassniki,\r\n            error\r\n        } = this.state;\r\n\r\n        return (\r\n            <form>\r\n                <h2>3. Отметьте социальные сети</h2>\r\n                <div className='social-input-group'>\r\n                    <CheckBox\r\n                        name='isFacebook'\r\n                        label='Facebook'\r\n                        checked={isFacebook}\r\n                        onChange={this.handleInputChange}\r\n                        className='social-checkbox'\r\n                    />\r\n                    <Input\r\n                        name='facebook'\r\n                        value={facebook}\r\n                        placeholder='Facebook'\r\n                        error=''\r\n                        onChange={this.handleInputChange}\r\n                        className={isFacebook ? 'social-input show' : 'social-input'}\r\n                    />\r\n                </div>\r\n                <div className='social-input-group'>\r\n                    <CheckBox\r\n                        name='isVkontakte'\r\n                        label='Вконтакте'\r\n                        checked={isVkontakte}\r\n                        onChange={this.handleInputChange}\r\n                        className='social-checkbox'\r\n                    />\r\n                    <Input\r\n                        name='vkontakte'\r\n                        value={vkontakte}\r\n                        placeholder='Вконтакте'\r\n                        error=''\r\n                        onChange={this.handleInputChange}\r\n                        className={isVkontakte ? 'social-input show' : 'social-input'}\r\n                    />  \r\n                </div>\r\n                <div className='social-input-group'>\r\n                    <CheckBox\r\n                        name='isTwitter'\r\n                        label='Twitter'\r\n                        checked={isTwitter}\r\n                        onChange={this.handleInputChange}\r\n                        className='social-checkbox'\r\n                    />\r\n                    <Input\r\n                        name='twitter'\r\n                        value={twitter}\r\n                        placeholder='Twitter'\r\n                        error=''\r\n                        onChange={this.handleInputChange}\r\n                        className={isTwitter ? 'social-input show' : 'social-input'}\r\n                    />\r\n                </div>\r\n                <div className='social-input-group'>\r\n                    <CheckBox\r\n                        name='isOdnoklassniki'\r\n                        label='Одноклассники'\r\n                        checked={isOdnoklassniki}\r\n                        onChange={this.handleInputChange}\r\n                        className='social-checkbox'\r\n                    />\r\n                     <Input\r\n                        name='odnoklassniki'\r\n                        value={odnoklassniki}\r\n                        placeholder='Одноклассники'\r\n                        error=''\r\n                        onChange={this.handleInputChange}\r\n                        className={isOdnoklassniki ? 'social-input show' : 'social-input'}\r\n                    />\r\n                </div>\r\n                {error && <p className='error'>Выберите и вкажите хотя бы одну соцсеть!</p>}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SocialProfileForm;","import React, { Component } from 'react';\r\nimport './ImagePicker.scss';\r\n\r\nclass ImagePicker extends Component {\r\n    render() {\r\n        const { imageSrcList, selectedImage, onClick } = this.props;\r\n        return (\r\n            <div className='image-picker'>\r\n            {\r\n               imageSrcList.map( (image, index) => {\r\n                   const { imageSrc, kindOfPet} = image;\r\n                   return <img\r\n                     src={imageSrc} \r\n                     alt={kindOfPet} \r\n                     key={imageSrc}\r\n                     className={imageSrc === selectedImage ? 'active' : ''}\r\n                     onClick={() => onClick(imageSrc, kindOfPet)}\r\n                     />\r\n               })\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ImagePicker;","import React, { Component } from 'react';\r\nimport ImagePicker from 'components/image-picker/ImagePicker';\r\nimport './Forms.scss';\r\n\r\nconst imageList = [\r\n  { imageSrc: require('assets/pictures/cat1.jpg'), kindOfPet: 'котик' },\r\n  { imageSrc: require('assets/pictures/dog1.jpg'), kindOfPet: 'собачка' },\r\n  { imageSrc: require('assets/pictures/cat2.jpg'), kindOfPet: 'котик' },\r\n  { imageSrc: require('assets/pictures/hamster1.jpg'), kindOfPet: 'хомячок' },\r\n  { imageSrc: require('assets/pictures/cat3.jpg'), kindOfPet: 'котик' },\r\n  { imageSrc: require('assets/pictures/cat4.jpg'), kindOfPet: 'котик' },\r\n  { imageSrc: require('assets/pictures/raccoon1.jpg'), kindOfPet: 'енот' },\r\n  { imageSrc: require('assets/pictures/dog2.jpg'), kindOfPet: 'собачка' },\r\n]\r\n\r\nclass CatForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const { catImage } = this.props;\r\n        this.state = { selectedImage: catImage };\r\n    }\r\n\r\n    handleImageClick = (imageSrc, kindOfPet) => {\r\n        this.setState({\r\n            selectedImage: imageSrc,\r\n            kindOfPet\r\n        });\r\n\r\n        const { action, addIsValidatedForm } = this.props;\r\n\r\n        if(kindOfPet === 'котик') {\r\n            action(imageSrc);\r\n            addIsValidatedForm({4: true});\r\n            this.setState({ isCat: true});\r\n        } else {\r\n            this.setState({ isCat: false});\r\n            addIsValidatedForm({4: false});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { selectedImage, isCat, kindOfPet } = this.state;\r\n\r\n        return (\r\n            <form>\r\n                <h2>4. Выберите любимого котика</h2>\r\n                <ImagePicker \r\n                    imageSrcList={imageList}\r\n                    selectedImage={selectedImage} \r\n                    onClick={this.handleImageClick}\r\n                />\r\n                {\r\n                    isCat === false && selectedImage !== '' &&\r\n                    <p className='error'>Это {kindOfPet}! А нужен котик! Выберите котика.</p>\r\n                }\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default CatForm;","import React, { Component } from 'react';\r\nimport Button from '../button/Button';\r\nimport './Cards.scss';\r\n\r\nclass FinalScreen extends Component {\r\n    render() {\r\n        const {\r\n            name,\r\n            email,\r\n            country,\r\n            city,\r\n            socialNetworks,\r\n            catImage,\r\n            goOverAgain } = this.props;\r\n\r\n        return (\r\n            <div className='card'>\r\n                <div className='final-card-wrapper'>\r\n                    <div>\r\n                        <h1>{name}</h1>\r\n                        <p>{email}</p>\r\n                        <p className='location'>{country}, {city}</p>\r\n                        <div className='social-networks'>\r\n                          { socialNetworks.isFacebook && <p><span>Facebook:</span>{socialNetworks.facebook}</p> }\r\n                          { socialNetworks.isVkontakte && <p><span>Вконтакте:</span>{socialNetworks.vkontakte}</p> }\r\n                          { socialNetworks.isTwitter && <p><span>Twitter:</span>{socialNetworks.twitter}</p> }\r\n                          { socialNetworks.isOdnoklassniki && <p><span>Одноклассники:</span>{socialNetworks.odnoklassniki}</p> }\r\n                        </div>\r\n                    </div>\r\n                    <img src={catImage} alt='Котик' />\r\n                </div>\r\n                <Button kind='orange' onClick={goOverAgain}>\r\n                    <span>Пройти заново</span>\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FinalScreen;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport action from 'redux/actions';\r\nimport Button from 'components/button/Button';\r\nimport Pagination from 'components/pagination/Pagination';\r\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa';\r\nimport NameEmailForm from 'components/forms/NameEmailForm';\r\nimport LocationForm from 'components/forms/LocationForm';\r\nimport SocialProfileForm from 'components/forms/SocialProfileForm';\r\nimport CatForm from 'components/forms/CatForm';\r\nimport FinalScreen from 'components/cards/finalScreen';\r\nimport './App.scss';\r\n\r\nclass App extends Component {\r\n  state = { activeForm: 1, counterClickNextForm: 0 }\r\n\r\n  getActiveForm = () => {\r\n    const {\r\n      name,\r\n      email,\r\n      country,\r\n      city,\r\n      socialNetworks,\r\n      catImage,\r\n      addNameEmail,\r\n      addCatImage,\r\n      addSocialNetworks,\r\n      addLocation,\r\n      addIsValidatedForm } = this.props;\r\n    const { activeForm } = this.state;\r\n\r\n    switch (activeForm) {\r\n      case 1:\r\n        return <NameEmailForm name={name} email={email} action={addNameEmail} addIsValidatedForm={addIsValidatedForm}/>\r\n      case 2:\r\n        return <LocationForm country={country} city={city} action={addLocation} addIsValidatedForm={addIsValidatedForm}/>\r\n      case 3:\r\n        return <SocialProfileForm socialNetworks={socialNetworks} action={addSocialNetworks} addIsValidatedForm={addIsValidatedForm}/>\r\n      case 4:\r\n        return <CatForm catImage={catImage} action={addCatImage} addIsValidatedForm={addIsValidatedForm}/>\r\n      case 5:\r\n        return <FinalScreen  {...this.props} goOverAgain={this.goOverAgain} />\r\n      default:\r\n        return <NameEmailForm name={name} email={email} action={addNameEmail} addIsValidatedForm={addIsValidatedForm}/>\r\n    }\r\n  }\r\n\r\n  goToForm = (index) => {\r\n    const { forms } = this.props;\r\n    const { activeForm, counterClickNextForm } = this.state;\r\n    const isAForm = index >= 1 && index <= 5;\r\n\r\n    if( isAForm && \r\n        (activeForm >= index || \r\n          (forms[activeForm] && (activeForm + 1 === index || forms[index] || forms[index-1])))) {\r\n            this.setState({ activeForm: index });\r\n    }\r\n  }\r\n\r\n  goOverAgain = () => {\r\n    this.props.clearStore();\r\n    this.setState({ activeForm: 1 });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { forms } = this.props;\r\n    const { activeForm } = this.state;\r\n\r\n    return (\r\n      <div className='app'>\r\n        {\r\n          activeForm !== 5 &&\r\n          <Pagination totalPages={4} activeStep={activeForm} forms={forms} onClick={this.goToForm} />\r\n        }\r\n        <div className='forms'>\r\n          {this.getActiveForm()}\r\n        </div>\r\n        {\r\n          activeForm !== 5 &&\r\n          <div className='buttons'>\r\n            <Button onClick={() => this.goToForm(activeForm - 1)}>\r\n              <FaChevronLeft size='16px' style={{ marginRight: '5px' }} />\r\n              <span>Предыдущий</span>\r\n            </Button>\r\n            {\r\n              activeForm !== 4 ?\r\n                <Button onClick={() => this.goToForm(activeForm + 1)}>\r\n                  <span>Следующий</span>\r\n                  <FaChevronRight size='16px' style={{ marginLeft: '5px' }} />\r\n                </Button> :\r\n                <Button kind='orange' onClick={() => this.goToForm(activeForm + 1)}>\r\n                  <span>Завершить</span>\r\n                </Button>\r\n            }\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    name: state.NameEmail.name,\r\n    email: state.NameEmail.email,\r\n    country: state.Location.country,\r\n    city: state.Location.city,\r\n    socialNetworks: state.SocialNetworks,\r\n    catImage: state.CatImage,\r\n    forms: state.Forms\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return bindActionCreators(action, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport './index.scss';\r\nimport App from './app/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}