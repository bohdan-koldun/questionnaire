{"version":3,"sources":["assets/pictures/cat1.jpg","assets/pictures/dog1.jpg","assets/pictures/cat2.jpg","assets/pictures/hamster1.jpg","assets/pictures/cat3.jpg","assets/pictures/cat4.jpg","assets/pictures/raccoon1.jpg","assets/pictures/dog2.jpg","redux/constants.js","redux/reducers.js","redux/store.js","redux/actions.js","components/button/Button.js","components/pagination/Pagination.js","components/input/Input.js","services/validation.js","components/forms/NameEmailForm.js","components/select/Select.js","components/forms/LocationForm.js","components/checkbox/CheckBox.js","components/forms/SocialProfileForm.js","components/image-picker/ImagePicker.js","components/forms/CatForm.js","components/cards/finalScreen.js","app/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","constants","initialState","nameEmailData","name","email","locationData","country","city","socialNetworks","facebook","isFacebook","vkontakte","isVkontakte","twitter","isTwitter","odnoklassniki","isOdnoklassniki","catImage","src","kindOfPet","forms","1","valid","countAttemptNext","2","3","4","appReducer","combineReducers","Forms","state","arguments","length","undefined","action","type","Types","key","Object","keys","payload","forEach","objectSpread","NameEmail","Location","SocialNetworks","CatImage","rootReducer","storage","removeItem","concat","store","createStore","reducers","composeWithDevTools","actions","addNameEmail","addLocation","addSocialNetworks","networks","addCatImage","image","clearStore","addIsValidatedForm","isFormValid","countAttemptNextForm","formIndex","Button","_this$props","this","props","kind","onClick","children","react_default","a","createElement","className","Component","defaultProps","Pagination","totalPages","activeStep","buttons","_loop","i","classButton","push","Input","value","error","placeholder","onChange","style","isError","classInput","validateEmail","test","validateName","validateUrl","url","NameEmailForm","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","target","setState","defineProperty","validEmail","validName","prevProps","prevState","_this$state","_this$props2","formState","nextProps","_this$state2","_this$state3","_this$state4","components_input_Input","Select","showDropdown","handlerClick","setWrapperRef","node","inputRef","handleClickOutside","contains","handleChoose","document","addEventListener","removeEventListener","_this2","label","options","search","selectedKey","disabled","ref","autoComplete","readOnly","display","map","LocationForm","onChangeCountry","Countries","countryKey","filteredCities","filterCities","cityKey","onChangeCity","Cities","validateLocationForm","errorCountry","errorCity","find","components_select_Select","CheckBox","checked","SocialProfileForm","validateSocialProfileForm","counterFalse","errorFacebook","errorVkontakte","errorTwitter","errorOdnoklassniki","components_checkbox_CheckBox","ImagePicker","imageSrcList","selectedImage","index","imageSrc","alt","imageList","require","CatForm","handleImageClick","isCat","validateCatForm","components_image_picker_ImagePicker","FinalScreen","goOverAgain","components_button_Button","App","activeForm","allAttemptNextFormClick","getActiveForm","forms_NameEmailForm","forms_LocationForm","forms_SocialProfileForm","forms_CatForm","finalScreen","assign","goToForm","isAForm","isValidActiveForm","isAvailableNextAttemptForm","components_pagination_Pagination","fa","size","marginRight","marginLeft","connect","dispatch","bindActionCreators","Boolean","window","location","hostname","match","ReactDOM","render","es","src_app_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2f81b2eb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cat1.6a3b98f2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dog1.8a3d82c2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cat2.2e5c1ff6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hamster1.55c0a805.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cat3.b607ec5c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cat4.1f73c4fe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/raccoon1.9a227543.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dog2.b0aae8b2.jpg\";","export default {\r\n  ADD_NAME_EMAIL: 'ADD_NAME_EMAIL',\r\n  ADD_LOCATION_DATA: 'ADD_LOCATION_DATA',\r\n  ADD_SOCIAL_NETWORKS: 'SOCIAL_NETWORKS',\r\n  ADD_CAT_IMAGE: 'ADD_CAT_IMAGE',\r\n  GO_OVER_AGAIN: 'GO_OVER_AGAIN',\r\n  IS_VALIDATED_FORM: 'IS_VALIDATED_FORM',\r\n  COUNT_ATTEMPT_NEXT_FORM: 'COUNT_ATTEMPT_NEXT_FORM'\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport Types from './constants';\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nconst initialState = {\r\n  nameEmailData: {\r\n    name: '',\r\n    email: ''\r\n  },\r\n  locationData: {\r\n    country: '',\r\n    city: ''\r\n  },\r\n  socialNetworks: {\r\n    facebook: '',\r\n    isFacebook: false,\r\n    vkontakte: '',\r\n    isVkontakte: false,\r\n    twitter: '',\r\n    isTwitter: false,\r\n    odnoklassniki: '',\r\n    isOdnoklassniki: false\r\n  },\r\n  catImage: {\r\n    src: '',\r\n    kindOfPet: ''\r\n  },\r\n  forms: {\r\n    1: {\r\n      valid: false,\r\n      countAttemptNext: 0\r\n    },\r\n    2: {\r\n      valid: false,\r\n      countAttemptNext: 0\r\n    },\r\n    3: {\r\n      valid: false,\r\n      countAttemptNext: 0\r\n    },\r\n    4: {\r\n      valid: false,\r\n      countAttemptNext: 0\r\n    }\r\n  }\r\n};\r\n\r\nconst NameEmail = (state = initialState.nameEmailData, action) => {\r\n  switch (action.type) {\r\n    case Types.ADD_NAME_EMAIL:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Location = (state = initialState.locationData, action) => {\r\n  switch (action.type) {\r\n    case Types.ADD_LOCATION_DATA:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nconst SocialNetworks = (state = initialState.socialNetworks, action) => {\r\n  switch (action.type) {\r\n    case Types.ADD_SOCIAL_NETWORKS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst CatImage = (state = initialState.catImage, action) => {\r\n  switch (action.type) {\r\n    case Types.ADD_CAT_IMAGE:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Forms = (state = initialState.forms, action) => {\r\n  switch (action.type) {\r\n    case Types.IS_VALIDATED_FORM: {\r\n      const key = Object.keys(action.payload)[0];\r\n      state[key].valid = action.payload[key];\r\n      return state;\r\n    }\r\n    case Types.COUNT_ATTEMPT_NEXT_FORM: {\r\n      state[action.payload].countAttemptNext++;\r\n      return state;\r\n    }\r\n    case Types.GO_OVER_AGAIN: {\r\n      Object.keys(initialState.forms).forEach((key => {\r\n        initialState.forms[key] = {\r\n          valid: false,\r\n          countAttemptNext: 0\r\n        }\r\n      }))\r\n      return { ...initialState.forms };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nconst appReducer = combineReducers({\r\n  Forms,\r\n  NameEmail,\r\n  Location,\r\n  SocialNetworks,\r\n  CatImage\r\n});\r\n\r\nconst rootReducer = (state, action) => {\r\n  if (action.type === Types.GO_OVER_AGAIN) {\r\n    Object.keys(state).forEach(key => {\r\n      storage.removeItem(`persist:${key}`);\r\n    });\r\n    state = undefined;\r\n  }\r\n\r\n\r\n  return appReducer(state, action)\r\n}\r\n\r\nexport default rootReducer;","import { createStore} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(reducers,  composeWithDevTools());\r\n\r\nexport default store;","import Types from './constants'\r\n\r\nexport default {\r\n  addNameEmail: (name, email) => {\r\n    return { type: Types.ADD_NAME_EMAIL, payload: { name, email } };\r\n  },\r\n\r\n  addLocation: (country, city) => {\r\n    return { type: Types.ADD_LOCATION_DATA, payload: { country, city } };\r\n  },\r\n\r\n  addSocialNetworks: (networks) => {\r\n    return { type: Types.ADD_SOCIAL_NETWORKS, payload: networks };\r\n  },\r\n\r\n  addCatImage: (image) => {\r\n    return { type: Types.ADD_CAT_IMAGE, payload: image };\r\n  },\r\n\r\n  clearStore: () => {\r\n    return { type: Types.GO_OVER_AGAIN };\r\n  },\r\n\r\n  addIsValidatedForm: (isFormValid) => {\r\n    return { type: Types.IS_VALIDATED_FORM, payload: isFormValid };\r\n  },\r\n\r\n  countAttemptNextForm: (formIndex) => {\r\n    return { type: Types.COUNT_ATTEMPT_NEXT_FORM, payload: formIndex };\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport './Button.scss';\r\n\r\nclass Button extends Component {\r\n    render() {\r\n        const { type, kind, onClick, children } = this.props;\r\n        return (\r\n            <button\r\n                type={type}\r\n                className={kind === 'orange' ? 'orange-btn' : 'white-btn'}\r\n                onClick={onClick}\r\n            >\r\n                {children}\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nButton.defaultProps = {\r\n    type: 'button'\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport './Pagination.scss';\r\n\r\nclass Pagination extends Component {\r\n    render() {\r\n        const { totalPages, onClick, activeStep, forms } = this.props;\r\n        const buttons = [];\r\n        for (let i = 1; i <= totalPages; i++) {\r\n            let classButton = '';\r\n            if(activeStep === i) classButton += 'active ';\r\n            if(forms[i].valid) classButton += 'available';\r\n            \r\n            buttons.push(\r\n                <button\r\n                    className={classButton }\r\n                    onClick={() => onClick(i)}\r\n                    key={i}\r\n                >\r\n                    {i}\r\n                </button>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className='pagination'>\r\n                {buttons}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Pagination;\r\n","import React, { Component } from 'react';\r\nimport './Input.scss';\r\n\r\nclass Input extends Component {\r\n    render() {\r\n        const { type, value, name, error, placeholder, onChange, className, style } = this.props;\r\n        const isError = error.length > 0;\r\n        const classInput = isError ?  (!className ? 'input-error' : 'input-error ' + className) : className;\r\n\r\n        return (\r\n            <div className='input-wrapper'>\r\n                <input\r\n                    type={type}\r\n                    name={name}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    placeholder={placeholder}\r\n                    className={classInput}\r\n                    style={style}\r\n                />\r\n                {isError  && <span className='error'>{error}</span>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nInput.defaultProps = {\r\n    type: 'text'\r\n};\r\n \r\nexport default Input;","export function validateEmail(email) {\r\n    const regExp = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return regExp.test(email);\r\n}\r\n\r\nexport function validateName(name) {\r\n    const regExp = /^[а-яА-Я ]+$/;\r\n    return regExp.test(name);\r\n}\r\n\r\nexport function validateUrl(url) {\r\n    const regExp = /^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$/;\r\n    return regExp.test(url);\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport Input from 'components/input/Input';\r\nimport { validateEmail, validateName } from 'services/validation';\r\nimport './Forms.scss';\r\n\r\nclass NameEmailForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const { name, email } = this.props;\r\n        this.state = { name, email };\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({ [name]: value });\r\n\r\n        if (name === 'email')\r\n            this.setState({ validEmail: validateEmail(value) });\r\n\r\n        if (name === 'name')\r\n            this.setState({ validName: validateName(value) });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { name, email, validName, validEmail } = this.state;\r\n        const { action, addIsValidatedForm, formState } = this.props;\r\n\r\n        if (prevState.name !== name ||\r\n            prevState.email !== email ||\r\n            formState.countAttemptNext !== prevProps.formState.countAttemptNext) {\r\n            if (validName && validEmail) {\r\n                action(name, email);\r\n                addIsValidatedForm({ 1: true });\r\n            } else {\r\n                addIsValidatedForm({ 1: false });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        const { formState } = this.props;\r\n        const { name, email } = this.state;\r\n\r\n        if (!formState.valid && formState.countAttemptNext > 0) {\r\n            this.setState({ validEmail: validateEmail(email) });\r\n            this.setState({ validName: validateName(name) });\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        const { formState } = this.props;\r\n        const { name, email } = this.state;\r\n\r\n        if (!formState.valid && formState.countAttemptNext > 0) {\r\n            this.setState({ validEmail: validateEmail(email) });\r\n            this.setState({ validName: validateName(name) });\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { name, email, validName, validEmail } = this.state;\r\n        return (\r\n            <form>\r\n                <h2>1. Введите имя и e-mail</h2>\r\n                <Input\r\n                    name='name'\r\n                    value={name}\r\n                    placeholder='Имя'\r\n                    error={validName === false ? 'Имя должно состоять из букв только русского алфавита и пробела' : ''}\r\n                    onChange={this.handleInputChange}\r\n                />\r\n                <Input\r\n                    name='email'\r\n                    type='email'\r\n                    error={validEmail === false ? 'Неправильный email' : ''}\r\n                    value={email}\r\n                    placeholder='e-mail'\r\n                    onChange={this.handleInputChange}\r\n                />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default NameEmailForm;","import React, { Component } from 'react';\r\nimport './Select.scss';\r\n\r\nclass Select extends Component {\r\n    state = { showDropdown: false }\r\n\r\n    handlerClick = (event) => {\r\n        this.setState({ showDropdown: true });\r\n    }\r\n\r\n    setWrapperRef = (node) => {\r\n        this.inputRef = node;\r\n    }\r\n\r\n    handleClickOutside = (event) => {\r\n        if (this.inputRef && !this.inputRef.contains(event.target)) {\r\n            this.setState({ showDropdown: false });\r\n        }\r\n    }\r\n\r\n    handleChoose = (key) => {\r\n        this.props.onChange(key);\r\n        this.setState({ showDropdown: false });\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n\r\n    render() {\r\n        const { name, label, options, search, onChange, selectedKey, error, disabled } = this.props;\r\n        const { showDropdown } = this.state;\r\n        const isError = error.length > 0;\r\n\r\n        return (\r\n            <div className='select' ref={this.setWrapperRef}>\r\n                <input\r\n                    type='text'\r\n                    name={name}\r\n                    value={options[selectedKey] ? options[selectedKey] : ''}\r\n                    placeholder={label}\r\n                    onClick={this.handlerClick}\r\n                    onChange={() => onChange(selectedKey)}\r\n                    autoComplete='off'\r\n                    readOnly={!search}\r\n                    disabled={disabled}\r\n                    className={isError ? 'select-error' : ''}\r\n                />\r\n                 {isError && <p className='error'>{error}</p>}\r\n                <div className='select-dropdown' style={{ display: showDropdown ? 'flex' : 'none' }}>\r\n                    {\r\n                        Object.keys(options).map((key) => {\r\n                            return <span onClick={() => this.handleChoose(key)} key={options[key]} >{options[key]}</span>;\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSelect.defaultProps = {\r\n    options: [],\r\n    search: false,\r\n    disabled: false\r\n};\r\n\r\nexport default Select;","import React, { Component } from 'react';\r\nimport Select from 'components/select/Select';\r\nimport Countries from 'assets/json/countries.json';\r\nimport Cities from 'assets/json/cities.json';\r\nimport './Forms.scss';\r\n\r\nclass LocationForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const { country, city } = this.props;\r\n        const countryKey = Object.keys(Countries).find(key => Countries[key] === country);\r\n        const cityKey = Object.keys(Cities).find(key => Cities[key].name === city);\r\n\r\n        this.state = {\r\n            country: country,\r\n            countryKey: countryKey,\r\n            city: city,\r\n            cityKey: cityKey,\r\n            filteredCities: this.filterCities(countryKey),\r\n            errorCountry: '',\r\n            errorCity: ''\r\n        };\r\n    }\r\n\r\n    onChangeCountry = (key) => {\r\n        this.setState({\r\n            country: Countries[key],\r\n            countryKey: key\r\n        });\r\n\r\n        if (key) {\r\n            this.setState({ filteredCities: this.filterCities(key) });\r\n            this.setState({\r\n                city: '',\r\n                cityKey: ''\r\n            });\r\n        }\r\n    }\r\n\r\n    onChangeCity = (key) => {\r\n        this.setState({\r\n            city: Cities[key].name,\r\n            cityKey: key\r\n        });\r\n    }\r\n\r\n    filterCities = (countryKey) => {\r\n        const filteredCities = {};\r\n        Object.keys(Cities).forEach((key) => {\r\n            if (Cities[key].country == countryKey)\r\n                filteredCities[key] = Cities[key].name;\r\n        });\r\n\r\n        return filteredCities;\r\n    }\r\n\r\n    validateLocationForm = () => {\r\n        const { country, city, filteredCities } = this.state;\r\n        const { action, addIsValidatedForm } = this.props;\r\n        action(country, city);\r\n\r\n        if (country && (city || Object.keys(filteredCities).length === 0)) {\r\n            addIsValidatedForm({ 2: true });\r\n            this.setState({ errorCountry: '' });\r\n            this.setState({ errorCity: '' });\r\n\r\n        } else {\r\n            addIsValidatedForm({ 2: false });\r\n            country ?\r\n                this.setState({ errorCountry: '' }) : this.setState({ errorCountry: 'Выберите страну' });\r\n            (city || Object.keys(filteredCities).length === 0) ?\r\n                this.setState({ errorCity: '' }) : this.setState({ errorCity: 'Выберите город' });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { country, city } = this.state;\r\n\r\n        if (prevState.country !== country || prevState.city !== city)\r\n            this.validateLocationForm();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        const { formState } = nextProps;\r\n\r\n        if (!formState.valid && formState.countAttemptNext > 0)\r\n            this.validateLocationForm();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { formState } = this.props;\r\n\r\n        if (!formState.valid && formState.countAttemptNext > 0)\r\n            this.validateLocationForm();\r\n    }\r\n\r\n    render() {\r\n        const { countryKey, cityKey, filteredCities, errorCountry, errorCity } = this.state;\r\n        return (\r\n            <form>\r\n                <h2>2. Выберите страну и город</h2>\r\n                <Select\r\n                    name='country'\r\n                    label='Страна'\r\n                    error={errorCountry}\r\n                    selectedKey={countryKey}\r\n                    options={Countries}\r\n                    onChange={this.onChangeCountry}\r\n                />\r\n                <Select\r\n                    name='city'\r\n                    label='Город'\r\n                    error={errorCity}\r\n                    selectedKey={cityKey}\r\n                    options={filteredCities}\r\n                    onChange={this.onChangeCity}\r\n                    disabled={Object.keys(filteredCities).length === 0 ? true : false}\r\n                />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default LocationForm;","import React, { Component } from 'react';\r\nimport './CheckBox.scss';\r\n\r\nclass CheckBox extends Component {\r\n    render() {\r\n        const { name, label, onChange, checked, className } = this.props;\r\n        return (\r\n            <label className={!className ? 'checkbox-wrapper' : 'checkbox-wrapper ' + className}>{label}\r\n                <input type='checkbox' name={name} checked={checked} onChange={onChange} />\r\n                <span className='checkmark'></span>\r\n            </label>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CheckBox;","import React, { Component } from 'react';\r\nimport CheckBox from 'components/checkbox/CheckBox';\r\nimport Input from 'components/input/Input';\r\nimport { validateUrl } from 'services/validation';\r\nimport './Forms.scss';\r\n\r\nclass SocialProfileForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const { socialNetworks } = this.props;\r\n        this.state = {\r\n            ...socialNetworks,\r\n            errorFacebook: '',\r\n            errorVkontakte: '',\r\n            errorTwitter: '',\r\n            errorOdnoklassniki: '',\r\n            error: ''\r\n        };\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    validateSocialProfileForm = () => {\r\n        const { addIsValidatedForm } = this.props;\r\n        const {\r\n            facebook,\r\n            isFacebook,\r\n            vkontakte,\r\n            isVkontakte,\r\n            twitter,\r\n            isTwitter,\r\n            odnoklassniki,\r\n            isOdnoklassniki } = this.state;\r\n\r\n        let error = (isFacebook || isVkontakte || isTwitter || isOdnoklassniki);\r\n\r\n        if (!error) {\r\n            addIsValidatedForm({ 3: false });\r\n            this.setState({ error: true });\r\n        }\r\n        else {\r\n            this.setState({ error: false });\r\n            let counterFalse = 0;\r\n            if (isFacebook && !validateUrl(facebook)) {\r\n                counterFalse++;\r\n                this.setState({ errorFacebook: 'Ссылка не корректна' });\r\n            } else {\r\n                this.setState({ errorFacebook: '' });\r\n            }\r\n\r\n            if (isVkontakte && !validateUrl(vkontakte)) {\r\n                counterFalse++;\r\n                this.setState({ errorVkontakte: 'Ссылка не корректна' });\r\n            } else {\r\n                this.setState({ errorVkontakte: '' });\r\n            }\r\n\r\n            if (isTwitter && !validateUrl(twitter)) {\r\n                counterFalse++;\r\n                this.setState({ errorTwitter: 'Ссылка не корректна' });\r\n            } else {\r\n                this.setState({ errorTwitter: '' });\r\n            }\r\n\r\n            if (isOdnoklassniki && !validateUrl(odnoklassniki)) {\r\n                counterFalse++;\r\n                this.setState({ errorOdnoklassniki: 'Ссылка не корректна' });\r\n            } else {\r\n                this.setState({ errorOdnoklassniki: '' });\r\n            }\r\n\r\n            if (counterFalse > 0) {\r\n                addIsValidatedForm({ 3: false });\r\n            } else {\r\n                addIsValidatedForm({ 3: true });\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { action } = this.props;\r\n        const {\r\n            facebook,\r\n            isFacebook,\r\n            vkontakte,\r\n            isVkontakte,\r\n            twitter,\r\n            isTwitter,\r\n            odnoklassniki,\r\n            isOdnoklassniki } = this.state;\r\n\r\n        if (prevState.facebook !== facebook ||\r\n            prevState.vkontakte !== vkontakte ||\r\n            prevState.twitter !== twitter ||\r\n            prevState.odnoklassniki !== odnoklassniki) {\r\n            action({\r\n                facebook,\r\n                isFacebook,\r\n                vkontakte,\r\n                isVkontakte,\r\n                twitter,\r\n                isTwitter,\r\n                odnoklassniki,\r\n                isOdnoklassniki\r\n            });\r\n            this.validateSocialProfileForm();\r\n        }\r\n\r\n        \r\n        if (prevState.isFacebook !== isFacebook ||\r\n            prevState.isVkontakte !== isVkontakte ||\r\n            prevState.isTwitter !== isTwitter ||\r\n            prevState.isOdnoklassniki !== isOdnoklassniki) {\r\n            action({\r\n                facebook,\r\n                isFacebook,\r\n                vkontakte,\r\n                isVkontakte,\r\n                twitter,\r\n                isTwitter,\r\n                odnoklassniki,\r\n                isOdnoklassniki\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        const { formState } = nextProps;\r\n        if (!formState.valid && formState.countAttemptNext > 0)\r\n            this.validateSocialProfileForm();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { formState } = this.props;\r\n        if (!formState.valid && formState.countAttemptNext > 0)\r\n            this.validateSocialProfileForm();\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            facebook,\r\n            isFacebook,\r\n            vkontakte,\r\n            isVkontakte,\r\n            twitter,\r\n            isTwitter,\r\n            odnoklassniki,\r\n            isOdnoklassniki,\r\n            errorFacebook,\r\n            errorVkontakte,\r\n            errorTwitter,\r\n            errorOdnoklassniki,\r\n            error\r\n        } = this.state;\r\n\r\n        return (\r\n            <form>\r\n                <h2>3. Отметьте социальные сети</h2>\r\n                <div className='social-input-group'>\r\n                    <CheckBox\r\n                        name='isFacebook'\r\n                        label='Facebook'\r\n                        checked={isFacebook}\r\n                        onChange={this.handleInputChange}\r\n                        className='social-checkbox'\r\n                    />\r\n                    {\r\n                        isFacebook &&\r\n                        <Input\r\n                            name='facebook'\r\n                            value={facebook}\r\n                            placeholder='Facebook'\r\n                            error={errorFacebook}\r\n                            onChange={this.handleInputChange}\r\n                            className='social-input'\r\n                        />\r\n                    }\r\n                </div>\r\n                <div className='social-input-group'>\r\n                    <CheckBox\r\n                        name='isVkontakte'\r\n                        label='Вконтакте'\r\n                        checked={isVkontakte}\r\n                        onChange={this.handleInputChange}\r\n                        className='social-checkbox'\r\n                    />\r\n                    {\r\n                        isVkontakte &&\r\n                        <Input\r\n                            name='vkontakte'\r\n                            value={vkontakte}\r\n                            placeholder='Вконтакте'\r\n                            error={errorVkontakte}\r\n                            onChange={this.handleInputChange}\r\n                            className={isVkontakte ? 'social-input show' : 'social-input'}\r\n                        />\r\n                    }\r\n                </div>\r\n                <div className='social-input-group'>\r\n                    <CheckBox\r\n                        name='isTwitter'\r\n                        label='Twitter'\r\n                        checked={isTwitter}\r\n                        onChange={this.handleInputChange}\r\n                        className='social-checkbox'\r\n                    />\r\n                    {\r\n                        isTwitter &&\r\n                        <Input\r\n                            name='twitter'\r\n                            value={twitter}\r\n                            placeholder='Twitter'\r\n                            error={errorTwitter}\r\n                            onChange={this.handleInputChange}\r\n                            className={isTwitter ? 'social-input show' : 'social-input'}\r\n                        />\r\n                    }\r\n                </div>\r\n                <div className='social-input-group'>\r\n                    <CheckBox\r\n                        name='isOdnoklassniki'\r\n                        label='Одноклассники'\r\n                        checked={isOdnoklassniki}\r\n                        onChange={this.handleInputChange}\r\n                        className='social-checkbox'\r\n                    />\r\n                    {\r\n                        isOdnoklassniki &&\r\n                        <Input\r\n                            name='odnoklassniki'\r\n                            value={odnoklassniki}\r\n                            placeholder='Одноклассники'\r\n                            error={errorOdnoklassniki}\r\n                            onChange={this.handleInputChange}\r\n                            className={isOdnoklassniki ? 'social-input show' : 'social-input'}\r\n                        />\r\n                    }\r\n                </div>\r\n                {error && <p className='error'>Выберите и вкажите хотя бы одну соцсеть!</p>}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SocialProfileForm;","import React, { Component } from 'react';\r\nimport './ImagePicker.scss';\r\n\r\nclass ImagePicker extends Component {\r\n    render() {\r\n        const { imageSrcList, selectedImage, onClick } = this.props;\r\n        return (\r\n            <div className='image-picker'>\r\n                {\r\n                    imageSrcList.map((image, index) => {\r\n                        const { imageSrc, kindOfPet } = image;\r\n                        return <img\r\n                            src={imageSrc}\r\n                            alt={kindOfPet}\r\n                            key={imageSrc}\r\n                            className={imageSrc === selectedImage ? 'active' : ''}\r\n                            onClick={() => onClick(imageSrc, kindOfPet)}\r\n                        />\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ImagePicker;","import React, { Component } from 'react';\r\nimport ImagePicker from 'components/image-picker/ImagePicker';\r\nimport './Forms.scss';\r\n\r\nconst imageList = [\r\n    { imageSrc: require('assets/pictures/cat1.jpg'), kindOfPet: 'котик' },\r\n    { imageSrc: require('assets/pictures/dog1.jpg'), kindOfPet: 'собачка' },\r\n    { imageSrc: require('assets/pictures/cat2.jpg'), kindOfPet: 'котик' },\r\n    { imageSrc: require('assets/pictures/hamster1.jpg'), kindOfPet: 'хомячок' },\r\n    { imageSrc: require('assets/pictures/cat3.jpg'), kindOfPet: 'котик' },\r\n    { imageSrc: require('assets/pictures/cat4.jpg'), kindOfPet: 'котик' },\r\n    { imageSrc: require('assets/pictures/raccoon1.jpg'), kindOfPet: 'енот' },\r\n    { imageSrc: require('assets/pictures/dog2.jpg'), kindOfPet: 'собачка' },\r\n]\r\n\r\nclass CatForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const { catImage } = this.props;\r\n        this.state = { selectedImage: catImage.src, kindOfPet: catImage.kindOfPet };\r\n    }\r\n\r\n    handleImageClick = (imageSrc, kindOfPet) => {\r\n        this.setState({\r\n            selectedImage: imageSrc,\r\n            kindOfPet\r\n        });\r\n\r\n        const { action, addIsValidatedForm } = this.props;\r\n\r\n        if (kindOfPet === 'котик') {\r\n            action({src: imageSrc,kindOfPet});\r\n            addIsValidatedForm({ 4: true });\r\n            this.setState({ isCat: true });\r\n        } else {\r\n            action({src: imageSrc, kindOfPet});\r\n            this.setState({ isCat: false });\r\n            addIsValidatedForm({ 4: false });\r\n        }\r\n    }\r\n\r\n    validateCatForm = () => {\r\n        const { addIsValidatedForm } = this.props;\r\n        const { kindOfPet } = this.state;\r\n\r\n        if (kindOfPet === 'котик') {\r\n            addIsValidatedForm({ 4: true });\r\n            this.setState({ isCat: true });\r\n        } else {\r\n            this.setState({ isCat: false });\r\n            addIsValidatedForm({ 4: false });\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        const { formState } = nextProps;\r\n\r\n        if (!formState.valid && formState.countAttemptNext > 0)\r\n            this.validateCatForm();\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { formState } = this.props;\r\n\r\n        if (!formState.valid && formState.countAttemptNext > 0)\r\n            this.validateCatForm();\r\n    }\r\n\r\n    render() {\r\n        const { selectedImage, isCat, kindOfPet } = this.state;\r\n\r\n        return (\r\n            <form>\r\n                <h2>4. Выберите любимого котика</h2>\r\n                <ImagePicker\r\n                    imageSrcList={imageList}\r\n                    selectedImage={selectedImage}\r\n                    onClick={this.handleImageClick}\r\n                />\r\n                {\r\n                    isCat === false && selectedImage !== '' &&\r\n                    <p className='error'>Это {kindOfPet}! А нужен котик! Выберите котика.</p>\r\n                }\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default CatForm;","import React, { Component } from 'react';\r\nimport Button from '../button/Button';\r\nimport './Cards.scss';\r\n\r\nclass FinalScreen extends Component {\r\n    render() {\r\n        const {\r\n            name,\r\n            email,\r\n            country,\r\n            city,\r\n            socialNetworks,\r\n            catImage,\r\n            goOverAgain } = this.props;\r\n\r\n        return (\r\n            <div className='card'>\r\n                <div className='final-card-wrapper'>\r\n                    <div>\r\n                        <h1>{name}</h1>\r\n                        <p>{email}</p>\r\n                        <p className='location'>{country}, {city}</p>\r\n                        <div className='social-networks'>\r\n                          { socialNetworks.isFacebook && <p><span>Facebook:</span>{socialNetworks.facebook}</p> }\r\n                          { socialNetworks.isVkontakte && <p><span>Вконтакте:</span>{socialNetworks.vkontakte}</p> }\r\n                          { socialNetworks.isTwitter && <p><span>Twitter:</span>{socialNetworks.twitter}</p> }\r\n                          { socialNetworks.isOdnoklassniki && <p><span>Одноклассники:</span>{socialNetworks.odnoklassniki}</p> }\r\n                        </div>\r\n                    </div>\r\n                    <img src={catImage.src} alt='Котик' />\r\n                </div>\r\n                <Button kind='orange' onClick={goOverAgain}>\r\n                    <span>Пройти заново</span>\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FinalScreen;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport action from 'redux/actions';\r\nimport Button from 'components/button/Button';\r\nimport Pagination from 'components/pagination/Pagination';\r\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa';\r\nimport NameEmailForm from 'components/forms/NameEmailForm';\r\nimport LocationForm from 'components/forms/LocationForm';\r\nimport SocialProfileForm from 'components/forms/SocialProfileForm';\r\nimport CatForm from 'components/forms/CatForm';\r\nimport FinalScreen from 'components/cards/finalScreen';\r\nimport './App.scss';\r\n\r\nclass App extends Component {\r\n  state = { activeForm: 1, allAttemptNextFormClick: 0 }\r\n\r\n  getActiveForm = () => {\r\n    const {\r\n      name,\r\n      email,\r\n      country,\r\n      city,\r\n      socialNetworks,\r\n      catImage,\r\n      addNameEmail,\r\n      addCatImage,\r\n      addSocialNetworks,\r\n      addLocation,\r\n      addIsValidatedForm,\r\n      forms } = this.props;\r\n    const { activeForm } = this.state;\r\n\r\n    switch (activeForm) {\r\n      case 1:\r\n        return <NameEmailForm\r\n          name={name}\r\n          email={email}\r\n          action={addNameEmail}\r\n          addIsValidatedForm={addIsValidatedForm}\r\n          formState={forms[1]}\r\n          activeForm={activeForm}\r\n        />\r\n      case 2:\r\n        return <LocationForm\r\n          country={country}\r\n          city={city}\r\n          action={addLocation}\r\n          addIsValidatedForm={addIsValidatedForm}\r\n          formState={forms[2]}\r\n          activeForm={activeForm}\r\n        />\r\n      case 3:\r\n        return <SocialProfileForm\r\n          socialNetworks={socialNetworks}\r\n          action={addSocialNetworks}\r\n          addIsValidatedForm={addIsValidatedForm}\r\n          formState={forms[3]}\r\n          activeForm={activeForm}\r\n        />\r\n      case 4:\r\n        return <CatForm\r\n          catImage={catImage}\r\n          action={addCatImage}\r\n          addIsValidatedForm={addIsValidatedForm}\r\n          formState={forms[4]}\r\n          activeForm={activeForm}\r\n        />\r\n      case 5:\r\n        return <FinalScreen\r\n          {...this.props}\r\n          goOverAgain={this.goOverAgain}\r\n        />\r\n      default:\r\n        return <NameEmailForm\r\n          name={name}\r\n          email={email}\r\n          action={addNameEmail}\r\n          addIsValidatedForm={addIsValidatedForm}\r\n          formState={forms[1]}\r\n          activeForm={activeForm}\r\n        />\r\n    }\r\n  }\r\n\r\n  goToForm = (index) => {\r\n    const { forms, countAttemptNextForm } = this.props;\r\n    const { activeForm, allAttemptNextFormClick} = this.state;\r\n    const isAForm = index >= 1 && index <= 5;\r\n    const isValidActiveForm = forms[activeForm].valid;\r\n    const isAvailableNextAttemptForm = activeForm + 1 === index || forms[index].valid || !forms[index-1] || forms[index-1].valid;\r\n\r\n    if (isAForm && (activeForm >= index || (isValidActiveForm && isAvailableNextAttemptForm)))\r\n      this.setState({ activeForm: index });\r\n\r\n    countAttemptNextForm(activeForm);\r\n    this.setState({ allAttemptNextFormClick: allAttemptNextFormClick +1 });\r\n  }\r\n\r\n  goOverAgain = () => {\r\n    this.props.clearStore();\r\n    this.setState({ activeForm: 1 });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { forms } = this.props;\r\n    const { activeForm } = this.state;\r\n\r\n    return (\r\n      <div className='app'>\r\n        {\r\n          activeForm !== 5 &&\r\n          <Pagination totalPages={4} activeStep={activeForm} forms={forms} onClick={this.goToForm} />\r\n        }\r\n        <div className='forms'>\r\n          {this.getActiveForm()}\r\n        </div>\r\n        {\r\n          activeForm !== 5 &&\r\n          <div className='buttons'>\r\n            <Button onClick={() => this.goToForm(activeForm - 1)}>\r\n              <FaChevronLeft size='16px' style={{ marginRight: '5px' }} />\r\n              <span>Предыдущий</span>\r\n            </Button>\r\n            {\r\n              activeForm !== 4 ?\r\n                <Button onClick={() => this.goToForm(activeForm + 1)}>\r\n                  <span>Следующий</span>\r\n                  <FaChevronRight size='16px' style={{ marginLeft: '5px' }} />\r\n                </Button> :\r\n                <Button kind='orange' onClick={() => this.goToForm(activeForm + 1)}>\r\n                  <span>Завершить</span>\r\n                </Button>\r\n            }\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    name: state.NameEmail.name,\r\n    email: state.NameEmail.email,\r\n    country: state.Location.country,\r\n    city: state.Location.city,\r\n    socialNetworks: state.SocialNetworks,\r\n    catImage: state.CatImage,\r\n    forms: state.Forms\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return bindActionCreators(action, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport './index.scss';\r\nimport App from './app/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}